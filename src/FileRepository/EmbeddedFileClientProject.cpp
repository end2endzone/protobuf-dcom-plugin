/**
 * This file was generated by
 * bin2cpp v1.3.
 * Copyright (C) 2013-2014 end2endzone.com. All rights reserved.
 * Do not modify this file.
 */
#include ".\EmbeddedFileClientProject.h"
#include <stdio.h> //for FILE
#include <string> //for memcpy
namespace bin2cpp
{
  class ClientProjectFile : public virtual bin2cpp::File
  {
  public:
    ClientProjectFile() {}
    ~ClientProjectFile() {}
    virtual size_t getSize() { return 8747; }
    virtual size_t getSegmentSize() { return 200; }
    virtual size_t getNumSegments() { return 44; }
    virtual const char * getFilename() { return "DCOMPLUGIN_COMPONENT_NAMEClient.vcxproj"; }
    virtual const char * getSegment(size_t iIndex, size_t & oLength)
    {
      oLength = 0;
      if (iIndex >= getNumSegments())
        return NULL;
      const char * buffer = NULL;
      size_t index = 0;
      oLength = getSegmentSize();
      buffer = "\xef\xbb\277<?xml version=\"1.0\" encoding=\"utf-8\"?>\x0d\012<Project DefaultTargets=\"Build\" ToolsVersion=\"4.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\x0d\012  <ItemGroup Label=\"ProjectConfigurations\">\x0d"; if (iIndex == index) return buffer; index++;
      buffer = "\012    <ProjectConfiguration Include=\"Debug|Win32\">\x0d\012      <Configuration>Debug</Configuration>\x0d\012      <Platform>Win32</Platform>\x0d\012    </ProjectConfiguration>\x0d\012    <ProjectConfiguration Include=\"Release"; if (iIndex == index) return buffer; index++;
      buffer = "|Win32\">\x0d\012      <Configuration>Release</Configuration>\x0d\012      <Platform>Win32</Platform>\x0d\012    </ProjectConfiguration>\x0d\012  </ItemGroup>\x0d\012  <PropertyGroup Label=\"Globals\">\x0d\012    <ProjectName>DCOMPLUGIN_CO"; if (iIndex == index) return buffer; index++;
      buffer = "MPONENT_NAMEClient</ProjectName>\x0d\012    <ProjectGuid>{DCOMPLUGIN_CLIENT_PROJECT_GUID_UPPER}</ProjectGuid>\x0d\012    <RootNamespace>DCOMPLUGIN_COMPONENT_NAMEClient</RootNamespace>\x0d\012  </PropertyGroup>\x0d\012  <Impo"; if (iIndex == index) return buffer; index++;
      buffer = "rt Project=\"$(VCTargetsPath)\\Microsoft.Cpp.Default.props\" />\x0d\012  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"Configuration\">\x0d\012    <ConfigurationType>DynamicLibrary</"; if (iIndex == index) return buffer; index++;
      buffer = "ConfigurationType>\x0d\012    <UseOfMfc>false</UseOfMfc>\x0d\012    <CharacterSet>MultiByte</CharacterSet>\x0d\012  </PropertyGroup>\x0d\012  <PropertyGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\""; if (iIndex == index) return buffer; index++;
      buffer = "Configuration\">\x0d\012    <ConfigurationType>DynamicLibrary</ConfigurationType>\x0d\012    <UseOfMfc>false</UseOfMfc>\x0d\012    <CharacterSet>MultiByte</CharacterSet>\x0d\012  </PropertyGroup>\x0d\012  <Import Project=\"$(VCTarge"; if (iIndex == index) return buffer; index++;
      buffer = "tsPath)\\Microsoft.Cpp.props\" />\x0d\012  <ImportGroup Label=\"ExtensionSettings\">\x0d\012  </ImportGroup>\x0d\012  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\" Label=\"PropertySheets\">\x0d\012    <Imp"; if (iIndex == index) return buffer; index++;
      buffer = "ort Project=\"$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\x0d\012    <Import Project=\"$(VCTa"; if (iIndex == index) return buffer; index++;
      buffer = "rgetsPath)Microsoft.CPP.UpgradeFromVC71.props\" />\x0d\012  </ImportGroup>\x0d\012  <ImportGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\" Label=\"PropertySheets\">\x0d\012    <Import Project=\"$(UserRoot"; if (iIndex == index) return buffer; index++;
      buffer = "Dir)\\Microsoft.Cpp.$(Platform).user.props\" Condition=\"exists('$(UserRootDir)\\Microsoft.Cpp.$(Platform).user.props')\" Label=\"LocalAppDataPlatform\" />\x0d\012    <Import Project=\"$(VCTargetsPath)Microsoft.CPP"; if (iIndex == index) return buffer; index++;
      buffer = ".UpgradeFromVC71.props\" />\x0d\012  </ImportGroup>\x0d\012  <PropertyGroup Label=\"UserMacros\" />\x0d\012  <PropertyGroup>\x0d\012    <_ProjectFileVersion>10.0.40219.1</_ProjectFileVersion>\x0d\012    <OutDir Condition=\"'$(Configur"; if (iIndex == index) return buffer; index++;
      buffer = "ation)|$(Platform)'=='Release|Win32'\">$(SolutionDir)$(Configuration)\\</OutDir>\x0d\012    <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">$(Configuration)\\</IntDir>\x0d\012    <LinkIncremental"; if (iIndex == index) return buffer; index++;
      buffer = " Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">false</LinkIncremental>\x0d\012    <OutDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(SolutionDir)$(Configuration)\\</OutDir>\x0d\012  "; if (iIndex == index) return buffer; index++;
      buffer = "  <IntDir Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">$(Configuration)\\</IntDir>\x0d\012    <LinkIncremental Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">false</LinkIncremental>\x0d\x0a"; if (iIndex == index) return buffer; index++;
      buffer = "  </PropertyGroup>\x0d\012  <ItemDefinitionGroup Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">\x0d\012    <Midl>\x0d\012      <PreprocessorDefinitions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefin"; if (iIndex == index) return buffer; index++;
      buffer = "itions>\x0d\012      <MkTypLibCompatible>true</MkTypLibCompatible>\x0d\012      <SuppressStartupBanner>true</SuppressStartupBanner>\x0d\012      <TargetEnvironment>Win32</TargetEnvironment>\x0d\012      <TypeLibraryName>$(Ou"; if (iIndex == index) return buffer; index++;
      buffer = "tDir)$(ProjectName).tlb</TypeLibraryName>\x0d\012      <HeaderFileName>\x0d\012      </HeaderFileName>\x0d\012    </Midl>\x0d\012    <ClCompile>\x0d\012      <Optimization>MaxSpeed</Optimization>\x0d\012      <InlineFunctionExpansion>On"; if (iIndex == index) return buffer; index++;
      buffer = "lyExplicitInline</InlineFunctionExpansion>\x0d\012      <PreprocessorDefinitions>WIN32;NDEBUG;_WINDOWS;_USRDLL;_CRT_SECURE_NO_WARNINGS;_SCL_SECURE_NO_WARNINGS;DCOMPLUGIN_COMPONENT_NAME_CLIENT_EXPORTS;%(Prep"; if (iIndex == index) return buffer; index++;
      buffer = "rocessorDefinitions)</PreprocessorDefinitions>\x0d\012      <StringPooling>true</StringPooling>\x0d\012      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>\x0d\012      <FunctionLevelLinking>true</FunctionLevelLinki"; if (iIndex == index) return buffer; index++;
      buffer = "ng>\x0d\012      <PrecompiledHeaderOutputFile>\x0d\012      </PrecompiledHeaderOutputFile>\x0d\012      <WarningLevel>Level3</WarningLevel>\x0d\012      <SuppressStartupBanner>true</SuppressStartupBanner>\x0d\012      <AdditionalI"; if (iIndex == index) return buffer; index++;
      buffer = "ncludeDirectories>$(PROTOBUF_INCLUDE_DIR)</AdditionalIncludeDirectories>\x0d\012      <PrecompiledHeaderFile>\x0d\012      </PrecompiledHeaderFile>\x0d\012    </ClCompile>\x0d\012    <ResourceCompile>\x0d\012      <PreprocessorDef"; if (iIndex == index) return buffer; index++;
      buffer = "initions>NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\x0d\012      <Culture>0x0409</Culture>\x0d\012    </ResourceCompile>\x0d\012    <Link>\x0d\012      <OutputFile>$(OutDir)$(ProjectName).dll</OutputFile>\x0d\012 "; if (iIndex == index) return buffer; index++;
      buffer = "     <SuppressStartupBanner>true</SuppressStartupBanner>\x0d\012      <RandomizedBaseAddress>false</RandomizedBaseAddress>\x0d\012      <DataExecutionPrevention>\x0d\012      </DataExecutionPrevention>\x0d\012      <ImportLi"; if (iIndex == index) return buffer; index++;
      buffer = "brary>$(OutDir)$(ProjectName).lib</ImportLibrary>\x0d\012      <TargetMachine>MachineX86</TargetMachine>\x0d\012      <AdditionalLibraryDirectories>$(PROTOBUF_LIB_DIR)\\$(ConfigurationName)</AdditionalLibraryDirec"; if (iIndex == index) return buffer; index++;
      buffer = "tories>\x0d\012      <AdditionalDependencies>$(PROTOBUF_RELEASE_LIBRARIES);%(AdditionalDependencies)</AdditionalDependencies>\x0d\012    </Link>\x0d\012  </ItemDefinitionGroup>\x0d\012  <ItemDefinitionGroup Condition=\"'$(Con"; if (iIndex == index) return buffer; index++;
      buffer = "figuration)|$(Platform)'=='Debug|Win32'\">\x0d\012    <Midl>\x0d\012      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\x0d\012      <MkTypLibCompatible>true</MkTypLibCompatible>\x0d\x0a"; if (iIndex == index) return buffer; index++;
      buffer = "      <SuppressStartupBanner>true</SuppressStartupBanner>\x0d\012      <TargetEnvironment>Win32</TargetEnvironment>\x0d\012      <TypeLibraryName>$(OutDir)$(ProjectName).tlb</TypeLibraryName>\x0d\012      <HeaderFileNa"; if (iIndex == index) return buffer; index++;
      buffer = "me>\x0d\012      </HeaderFileName>\x0d\012    </Midl>\x0d\012    <ClCompile>\x0d\012      <Optimization>Disabled</Optimization>\x0d\012      <PreprocessorDefinitions>WIN32;_DEBUG;_WINDOWS;_USRDLL;_CRT_SECURE_NO_WARNINGS;_SCL_SECUR"; if (iIndex == index) return buffer; index++;
      buffer = "E_NO_WARNINGS;DCOMPLUGIN_COMPONENT_NAME_CLIENT_EXPORTS;%(PreprocessorDefinitions)</PreprocessorDefinitions>\x0d\012      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>\x0d\012      <RuntimeLibrary>Mult"; if (iIndex == index) return buffer; index++;
      buffer = "iThreadedDebugDLL</RuntimeLibrary>\x0d\012      <PrecompiledHeaderOutputFile>\x0d\012      </PrecompiledHeaderOutputFile>\x0d\012      <WarningLevel>Level3</WarningLevel>\x0d\012      <SuppressStartupBanner>true</SuppressSta"; if (iIndex == index) return buffer; index++;
      buffer = "rtupBanner>\x0d\012      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>\x0d\012      <AdditionalIncludeDirectories>$(PROTOBUF_INCLUDE_DIR)</AdditionalIncludeDirectories>\x0d\012      <PrecompiledHeade"; if (iIndex == index) return buffer; index++;
      buffer = "rFile>\x0d\012      </PrecompiledHeaderFile>\x0d\012    </ClCompile>\x0d\012    <ResourceCompile>\x0d\012      <PreprocessorDefinitions>_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>\x0d\012      <Culture>0x0409</Cult"; if (iIndex == index) return buffer; index++;
      buffer = "ure>\x0d\012    </ResourceCompile>\x0d\012    <Link>\x0d\012      <OutputFile>$(OutDir)$(ProjectName).dll</OutputFile>\x0d\012      <SuppressStartupBanner>true</SuppressStartupBanner>\x0d\012      <GenerateDebugInformation>true</G"; if (iIndex == index) return buffer; index++;
      buffer = "enerateDebugInformation>\x0d\012      <RandomizedBaseAddress>false</RandomizedBaseAddress>\x0d\012      <DataExecutionPrevention>\x0d\012      </DataExecutionPrevention>\x0d\012      <ImportLibrary>$(OutDir)$(ProjectName).li"; if (iIndex == index) return buffer; index++;
      buffer = "b</ImportLibrary>\x0d\012      <TargetMachine>MachineX86</TargetMachine>\x0d\012      <AdditionalLibraryDirectories>$(PROTOBUF_LIB_DIR)\\$(ConfigurationName)</AdditionalLibraryDirectories>\x0d\012      <AdditionalDepend"; if (iIndex == index) return buffer; index++;
      buffer = "encies>$(PROTOBUF_DEBUG_LIBRARIES);%(AdditionalDependencies)</AdditionalDependencies>\x0d\012    </Link>\x0d\012  </ItemDefinitionGroup>\x0d\012  <ItemGroup>\x0d\012    <ProjectReference Include=\"DCOMPLUGIN_COMPONENT_NAMEPro"; if (iIndex == index) return buffer; index++;
      buffer = "toLib.vcxproj\">\x0d\012      <Project>{DCOMPLUGIN_PROTOLIB_PROJECT_GUID_LOWER}</Project>\x0d\012    </ProjectReference>\x0d\012    <ProjectReference Include=\"DCOMPLUGIN_COMPONENT_NAMEServer.vcxproj\">\x0d\012      <Project>{D"; if (iIndex == index) return buffer; index++;
      buffer = "COMPLUGIN_SERVER_PROJECT_GUID_LOWER}</Project>\x0d\012    </ProjectReference>\x0d\012  </ItemGroup>\x0d\012  <ItemGroup>\x0d\012    <ClCompile Include=\"DCOMPLUGIN_COMPONENT_NAMEClient.cpp\">\x0d\012      <Optimization Condition=\"'$"; if (iIndex == index) return buffer; index++;
      buffer = "(Configuration)|$(Platform)'=='Debug|Win32'\">Disabled</Optimization>\x0d\012      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">WIN32;_DEBUG;_WINDOWS;_MBCS;_USRDLL;DCOMP"; if (iIndex == index) return buffer; index++;
      buffer = "LUGIN_COMPONENT_NAME_CLIENT_EXPORTS</PreprocessorDefinitions>\x0d\012      <BasicRuntimeChecks Condition=\"'$(Configuration)|$(Platform)'=='Debug|Win32'\">EnableFastChecks</BasicRuntimeChecks>\x0d\012      <Optimiz"; if (iIndex == index) return buffer; index++;
      buffer = "ation Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">MaxSpeed</Optimization>\x0d\012      <PreprocessorDefinitions Condition=\"'$(Configuration)|$(Platform)'=='Release|Win32'\">WIN32;NDEBUG;_WIND"; if (iIndex == index) return buffer; index++;
      buffer = "OWS;_MBCS;_USRDLL;DCOMPLUGIN_COMPONENT_NAME_CLIENT_EXPORTS</PreprocessorDefinitions>\x0d\012    </ClCompile>\x0d\012  </ItemGroup>\x0d\012  <ItemGroup>\x0d\012    <ClInclude Include=\"DCOMPLUGIN_COMPONENT_NAMEClient.h\" />\x0d\012  "; if (iIndex == index) return buffer; index++;
      oLength = 147;
      buffer = "</ItemGroup>\x0d\012  <Import Project=\"$(VCTargetsPath)\\Microsoft.Cpp.targets\" />\x0d\012  <ImportGroup Label=\"ExtensionTargets\">\x0d\012  </ImportGroup>\x0d\012</Project>"; if (iIndex == index) return buffer; index++;
      oLength = 0;
      return NULL;
    }
    virtual const char * getMd5() { return "62c19dfeb61d1ea21f601594f32d2aed"; }
    virtual char * newBuffer()
    {
      size_t size = getSize();
      char * buffer = new char[size];
      if (buffer == NULL)
        return NULL;
      size_t numSegments = getNumSegments();
      size_t segmentLength = 0;
      size_t index = 0;
      for(size_t i=0; i<numSegments; i++)
      {
        const char * segmentBuffer = getSegment(i, segmentLength);
        memcpy(&buffer[index], segmentBuffer, segmentLength);
        index += segmentLength;
      }
      return buffer;
    }
    virtual bool save(const char * iFilename)
    {
      FILE * f = fopen(iFilename, "wb");
      if (!f) return false;
      size_t numSegments = getNumSegments();
      size_t segmentLength = 0;
      const char * buffer = NULL;
      for(size_t i=0; i<numSegments; i++)
      {
        buffer = getSegment(i, segmentLength);
        fwrite(buffer, 1, segmentLength, f);
      }
      fclose(f);
      return true;
    }
  };
  File & getClientProjectFile() { static ClientProjectFile _instance; return _instance; }
}; //bin2cpp
